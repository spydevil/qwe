buildscript {
    ext.kotlin_version = '1.2.70'
    ext.vertx_version = '3.5.3'
    ext.arrow_version = '0.7.3'
    ext.mockk_version = '1.8.7'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.exposed:exposed:0.10.5'

    compile 'com.auth0:java-jwt:3.4.0'
    compile 'com.rabbitmq:amqp-client:5.4.1'
    compile 'com.microsoft.sqlserver:mssql-jdbc:7.0.0.jre8'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6'
    compile 'com.jdiazcano.cfg4k:cfg4k-core:0.9.0'
    compileOnly 'org.mvel:mvel2:2.4.2.Final'

    compile "io.vertx:vertx-web:$vertx_version"
    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"
    compile "io.vertx:vertx-jdbc-client:$vertx_version"
    compile "io.vertx:vertx-rx-java:$vertx_version"
    compile "io.vertx:vertx-rx-java2:$vertx_version"
    compile "io.vertx:vertx-rabbitmq-client:$vertx_version"
    compile "io.vertx:vertx-service-proxy:$vertx_version"
    compile "io.vertx:vertx-service-discovery:$vertx_version"
    compile "io.vertx:vertx-hazelcast:$vertx_version"
    compileOnly "io.vertx:vertx-codegen:$vertx_version"
    kapt "io.vertx:vertx-codegen:$vertx_version:processor"

    compile "io.arrow-kt:arrow-core:$arrow_version"
    compile "io.arrow-kt:arrow-syntax:$arrow_version"
    compile "io.arrow-kt:arrow-typeclasses:$arrow_version"
    compile "io.arrow-kt:arrow-data:$arrow_version"
    compile "io.arrow-kt:arrow-instances-core:$arrow_version"
    compile "io.arrow-kt:arrow-instances-data:$arrow_version"
    kapt "io.arrow-kt:arrow-annotations-processor:$arrow_version"

    testCompile "io.mockk:mockk:$mockk_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
    testCompile "org.junit.platform:junit-platform-runner:1.3.0"
}

junitPlatform {
    platformVersion '1.0.0'

    filters {
        engines {
            include 'junit-jupiter', 'junit-vintage'
        }
    }

    logManager 'org.apache.logging.log4j.jul.LogManager'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'main.kotlin.App'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

idea {
    module {
        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}

sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}